labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Sorensons_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Jaccard_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Jaccards Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Sorensons_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Sorensons Similarity")
#Jaccards average boxplot by site
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Jaccard_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Jaccards Similarity")
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
library(readr)
#library(ggplot2)
library(mgcv)
#library(dplyr)
#library(tidyr)
library(mgcViz)
library(nlme)
mod_iNat_2 <- mgcv::gam(SppR ~ Site*Year + s(effort, bs='cr',k=3), family=nb, data=iNat_effort)
mod_iNat_2 <- mgcv::gam(SppR ~ Site+Year + s(effort, bs='cr',k=3), family=nb, data=iNat_effort)
summary(mod_iNat_2)
anova(mod_iNat_2)
mod_RLS <- mgcv::gam(SppR ~ Year + s(Site, bs='re') + s(effort), family=nb, data=RLS_effort)
RLS_effort <- effort_SppR %>%
dplyr::filter(Dataset=="RLS") %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
droplevels()
mod_RLS <- mgcv::gam(SppR ~ Year + s(Site, bs='re') + s(effort), family=nb, data=RLS_effort)
summary(mod_RLS)
anova(mod_RLS)
mod_RLS_2 <- mgcv::gam(SppR ~ Site+Year + s(effort), family=nb, data=RLS_effort)
summary(mod_RLS_2)
anova(mod_RLS_2)
mod_iNat_RLS <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') + s(effort), family=nb, data=iNat_RLS_effort_SppR)
iNat_RLS_effort_SppR <- effort_SppR %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
mutate(Year=as.factor(as.character(.$Year))) %>%
droplevels()
mod_iNat_RLS <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') + s(effort), family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS)
anova(mod_iNat_RLS)
mod_iNat_RLS_2 <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_2)
anova(mod_iNat_RLS_2)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Site*Dataset + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Dataset*Site + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Site*Dataset + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
View(iNat_RLS_effort_SppR)
iNat_RLS_effort_SppR <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_")
iNat_RLS_effort_SppR <- effort_SppR %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
mutate(Year=as.factor(as.character(.$Year))) %>%
droplevels()
iNat_RLS_effort_SppR$Si_Da <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_")
iNat_RLS_effort_SppR <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_", remove = FALSE)
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
library(multcomp)
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=Si_Da) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=SppR) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=SppR) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=contDist) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Si="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Site="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Site*Dataset="Tukey") # telling R to compare on the Dist factor
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
# iNat Unique
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 1)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("lightgrey", "darkgrey"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(iNat == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(RLS > 1)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 0)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 2)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
View(iNat_RLS_gllvm_ord_LV2_counts)
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
setwd("~/GitHub/diver_fish_selectivity")
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
load("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
#iNat_assigned <- bind_cols (assigned_points)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
View(iNat_assigned)
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
load("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
View(inat_dat)
inat_dat <- select(inat_dat, id)
View(inat_dat)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
inat_dat <- select(inat_dat, id, observed_on, url, latitude, longitude, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
#copy private lat/long to lat/long
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
#reduce data frame to relevant variables
inat_dat <- select(inat_dat, id, observed_on, url, final_lat, final_lng, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
View(regions_metadata)
View(iNat_assigned)
View(regions_metadata)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
Y
y
TRUE
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
library(sf)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
library(geos_measures)
install.packages("lwgeom")
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
View(iNat_assigned)
View(species_habitat)
View(marine)
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
iNat_assigned <- filter(iNat_assigned, fresh_only=1)
iNat_assigned <- filter(iNat_assigned, fresh_only==1)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
iNat_assigned_test <- iNat_assigned %>% filter(is.na(positional_accuracy)| fresh_only==0)
iNat_assigned_test <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
nat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
#reduce data frame to relevant variables
inat_dat <- select(inat_dat, id, observed_on, url, final_lat, final_lng, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
#iNat_assigned <- bind_cols (assigned_points)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
iNat_assigned_test <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
View(iNat_assigned_test)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000[m])
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000, units=m)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000m)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00[m])
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00(m))
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000))
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000)
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")

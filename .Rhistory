labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
setwd("~/GitHub/diver_fish_selectivity")
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
load("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
#iNat_assigned <- bind_cols (assigned_points)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
View(iNat_assigned)
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
load("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
library(sf)
library(dplyr)
library(readr)
library(stringr)
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
View(inat_dat)
inat_dat <- select(inat_dat, id)
View(inat_dat)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
inat_dat <- select(inat_dat, id, observed_on, url, latitude, longitude, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
#copy private lat/long to lat/long
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
#reduce data frame to relevant variables
inat_dat <- select(inat_dat, id, observed_on, url, final_lat, final_lng, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
View(regions_metadata)
View(iNat_assigned)
View(regions_metadata)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
Y
y
TRUE
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
library(sf)
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
library(geos_measures)
install.packages("lwgeom")
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
View(iNat_assigned)
View(species_habitat)
View(marine)
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
iNat_assigned <- filter(iNat_assigned, fresh_only=1)
iNat_assigned <- filter(iNat_assigned, fresh_only==1)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
iNat_assigned_test <- iNat_assigned %>% filter(is.na(positional_accuracy)| fresh_only==0)
iNat_assigned_test <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
nat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
#reduce data frame to relevant variables
inat_dat <- select(inat_dat, id, observed_on, url, final_lat, final_lng, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
#iNat_assigned <- bind_cols (assigned_points)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
iNat_assigned_test <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
View(iNat_assigned_test)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000[m])
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000, units=m)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000m)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00[m])
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000.00(m))
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance
iNat_assigned_test$distance <- as.numeric(iNat_assigned_test$distance)
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000))
iNat_assigned_test <- iNat_assigned_test %>% filter(distance<15000)
save.image("~/GitHub/diver_fish_selectivity/inat_fish_selectivity.RData")
IMCRA_master_list <- read_csv("Data/species_lists/All regions combined.csv")
library(sf)
library(dplyr)
library(readr)
library(stringr)
IMCRA_master_list <- read_csv("Data/species_lists/All regions combined.csv")
setwd("~/GitHub/diver_fish_selectivity")
IMCRA_master_list <- read_csv("Data/species_lists/All regions combined.csv")
IMCRA_master_list <- read_csv("Data/species_lists/All regions combined.csv")
IMCRA_master_list <- read_csv("Data\species_lists/All regions combined.csv")
IMCRA_master_list <- read_csv("Data/species_lists/AFD-All regions combined.csv")
iNat_master_list <- distinct(iNat_assigned,species)
View(IMCRA_master_list)
iNat_master_list <- distinct(iNat_assigned,scientific_name)
View(IMCRA_master_list)
View(iNat_master_list)
IMCRA_species_all <-  unite(IMCRA_master_list, GENUS, SPECIES, col="Species",sep=" ")
library(tidyverse)
library(dplyr)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE )
library(tidyverse)
IMCRA_species_all <-  unite(IMCRA_master_list, GENUS, SPECIES, col="Species",sep=" ")
View(IMCRA_species_all)
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., species)
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., "species")
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., "Species")
match_indx <- match(IMCRA_species_all, iNat_master_list, nomatch = 0)
match_indx <- match(IMCRA_species_all$Species, iNat_master_list$scientific_name, nomatch = 0)
IMCRA_iNat_match <- bind_cols(IMCRA_species_all, match_indx)
match_indx <- as.data.frame(match(IMCRA_species_all$Species, iNat_master_list$scientific_name, nomatch = 0))
IMCRA_iNat_match <- bind_cols(IMCRA_species_all, match_indx)
View(IMCRA_iNat_match)
match_indx_iNat <- as.data.frame(match(iNat_master_list$scientific_name, IMCRA_species_all$Species,  nomatch = 0))
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
View(iNat_IMCRA_match)
#Global species matching
rm(iNat_IMCRA_match)
iNat_IMCRA_match$match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
View(freshwater)
View(marine)
View(freshwater)
View(iNat_assigned)
View(inat_species_list)
View(freshwater)
View(marine)
View(species_habitat)
View(inat_dat)
View(iNat_assigned)
iNat_assigned <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
iNat_master_list <- distinct(iNat_assigned,scientific_name)
match_indx_iNat <- as.data.frame(match(iNat_master_list$scientific_name, IMCRA_species_all$Species,  nomatch = 0))
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
iNat_assigned <- iNat_assigned %>% filter(distance<15000)
iNat_master_list <- distinct(iNat_assigned,scientific_name)
#IMCRA SPECIES LISTS
IMCRA_master_list <- read_csv("Data/species_lists/AFD-All regions combined.csv")
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., "Species")
#iNat species not in IMCRA - freshwater and other oddities???
match_indx_iNat <- as.data.frame(match(iNat_master_list$scientific_name, IMCRA_species_all$Species,  nomatch = 0))
#Global species matching
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
#IMCRA species found/not by INat
match_indx <- as.data.frame(match(IMCRA_species_all$Species, iNat_master_list$scientific_name, nomatch = 0))
#Global species matching
IMCRA_iNat_match <- bind_cols(IMCRA_species_all, match_indx)
iNat_assigned <- iNat_assigned %>% filter(distance<15000)
iNat_assigned$distance <- as.numeric(iNat_assigned$distance)
iNat_assigned <- iNat_assigned %>% filter(distance<15000)
iNat_master_list <- distinct(iNat_assigned,scientific_name)
#IMCRA SPECIES LISTS
IMCRA_master_list <- read_csv("Data/species_lists/AFD-All regions combined.csv")
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., "Species")
#iNat species not in IMCRA - freshwater and other oddities???
match_indx_iNat <- as.data.frame(match(iNat_master_list$scientific_name, IMCRA_species_all$Species,  nomatch = 0))
#Global species matching
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
#IMCRA species found/not by INat
match_indx <- as.data.frame(match(IMCRA_species_all$Species, iNat_master_list$scientific_name, nomatch = 0))
#Global species matching
IMCRA_iNat_match <- bind_cols(IMCRA_species_all, match_indx)
# packages
library(sf)
library(dplyr)
library(readr)
library(stringr)
library(tidyverse)
#install.packages("tidyverse", dependencies = TRUE )
#install.packages("lwgeom")
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
#plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]], geometry=regions_shape[[5]],
col.id=1:41)
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups? ie dead fish on beaches - could potentially be from  outside a region.
## removing obscured necessary? point is within 0.2 decrees -> ~20km
#copy private lat/long to lat/long
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
#reduce data frame to relevant variables
inat_dat <- select(inat_dat, id, observed_on, url, final_lat, final_lng, scientific_name, common_name)
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_nearest_feature(points_sf, regions_shape))
#iNat_assigned <- bind_cols (assigned_points)
iNat_assigned <- inat_dat %>%
bind_cols (assigned_points) %>%
rename(col.id='st_nearest_feature(points_sf, regions_shape)')%>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-col.id)
#calculate distance
iNat_assigned$distance <- st_distance(iNat_assigned$geometry, points_sf$geometry,by_element = TRUE)
rm(regions_metadata)
iNat_assigned <- select(iNat_assigned, -geometry)
inat_old_raw <- read_csv("Data/iNat_AusFish_old_wth_fam.csv")
inat_taxon <- inat_old_raw%>%
distinct(., scientific_name, .keep_all = TRUE)%>%
select(c(38, 49,52))
iNat_assigned <-   left_join(iNat_assigned, inat_taxon, by='scientific_name')
inat_species_list <- inat_old_raw %>%
distinct(., scientific_name, .keep_all = FALSE)
inat_species_list_2 <- inat_species_list[[1]]
rfishbase::species(species_list=inat_species_list_2, fields = 'Fresh') -> freshwater
rfishbase::species(species_list=inat_species_list_2, fields = 'Saltwater') -> marine
rfishbase::species(species_list=inat_species_list_2, fields = 'Brack') -> brackish
species_habitat <-   bind_cols(freshwater, marine,brackish)
species_habitat$fresh_only <- abs(species_habitat$Fresh)+species_habitat$Saltwater+species_habitat$Brack
species_habitat$fresh_only <- sub(-1, 0, species_habitat$fresh_only)
species_habitat$fresh_only <- sub(-2, 0, species_habitat$fresh_only)
species_habitat <-   bind_cols(inat_species_list, species_habitat)
species_habitat <-   species_habitat[,-(2:4)]
iNat_assigned <-   left_join(iNat_assigned, species_habitat, by='scientific_name')
iNat_assigned <- iNat_assigned %>% filter(is.na(fresh_only)| fresh_only==0)
iNat_assigned$distance <- as.numeric(iNat_assigned$distance)
iNat_assigned <- iNat_assigned %>% filter(distance<15000)
iNat_master_list <- distinct(iNat_assigned,scientific_name)
#IMCRA SPECIES LISTS
IMCRA_master_list <- read_csv("Data/species_lists/AFD-All regions combined.csv")
IMCRA_species_all <- IMCRA_master_list %>%
unite(., GENUS, SPECIES, col="Species",sep=" ")%>%
select(., "Species")
#iNat species not in IMCRA - freshwater and other oddities???
match_indx_iNat <- as.data.frame(match(iNat_master_list$scientific_name, IMCRA_species_all$Species,  nomatch = 0))
#Global species matching
iNat_IMCRA_match <- bind_cols(iNat_master_list, match_indx_iNat)
iNat_IMCRA_match <- filter(iNat_IMCRA_match, iNat_IMCRA_match[[2]] == 0)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
#IMCRA species found/not by INat
match_indx <- as.data.frame(match(IMCRA_species_all$Species, iNat_master_list$scientific_name, nomatch = 0))
#Global species matching
IMCRA_iNat_match <- bind_cols(IMCRA_species_all, match_indx)
write.csv(iNat_IMCRA_match, file = "Outputs/iNat_IMCRA_match.csv")
View(iNat_IMCRA_match)
View(iNat_assigned)
View(inat_dat)
View(inat_dat_raw)

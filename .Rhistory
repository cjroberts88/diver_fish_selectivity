theme_bw()+
theme(panel.grid = element_line(colour = "NA"))+
geom_histogram( aes(y = 1*..density.. ), binwidth = 1, position="dodge")
ggplot_build(tmp_2)
View(iNat_Completeness)
iNat_RLS_SumSiteYr_Sum_Spread$Sorensons_Sim_inx <- (iNat_RLS_SumSiteYr_Sum_Spread$Both*2)/(iNat_RLS_SumSiteYr_Sum_Spread$iNat+iNat_RLS_SumSiteYr_Sum_Spread$RLS)
View(iNat_RLS_SumSiteYr_Sum_Spread)
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(Site, Sorensons_Sim_inx)) +
boxplot( stat="summary", fun.y="mean") +
labs(y= "Jaccard Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(Site, Sorensons_Sim_inx)) +
boxplot( ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Sorensons_Sim_inx)) +
boxplot( ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread$Sorensons_Sim_inx) +
boxplot(Site ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread) +
boxplot(Site, Sorensons_Sim_inx ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread) +
geom_boxplot(Site, Sorensons_Sim_inx ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=, y=Sorensons_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Sorensons_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Sorensons Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Jaccard_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Jaccards Similarity")
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Sorensons_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Sorensons Similarity")
#Jaccards average boxplot by site
ggplot(iNat_RLS_SumSiteYr_Sum_Spread, aes(x=Site, y=Jaccard_Sim_inx)) +
geom_boxplot( ) +
labs(y= "Jaccards Similarity")
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
library(readr)
#library(ggplot2)
library(mgcv)
#library(dplyr)
#library(tidyr)
library(mgcViz)
library(nlme)
mod_iNat_2 <- mgcv::gam(SppR ~ Site*Year + s(effort, bs='cr',k=3), family=nb, data=iNat_effort)
mod_iNat_2 <- mgcv::gam(SppR ~ Site+Year + s(effort, bs='cr',k=3), family=nb, data=iNat_effort)
summary(mod_iNat_2)
anova(mod_iNat_2)
mod_RLS <- mgcv::gam(SppR ~ Year + s(Site, bs='re') + s(effort), family=nb, data=RLS_effort)
RLS_effort <- effort_SppR %>%
dplyr::filter(Dataset=="RLS") %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
droplevels()
mod_RLS <- mgcv::gam(SppR ~ Year + s(Site, bs='re') + s(effort), family=nb, data=RLS_effort)
summary(mod_RLS)
anova(mod_RLS)
mod_RLS_2 <- mgcv::gam(SppR ~ Site+Year + s(effort), family=nb, data=RLS_effort)
summary(mod_RLS_2)
anova(mod_RLS_2)
mod_iNat_RLS <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') + s(effort), family=nb, data=iNat_RLS_effort_SppR)
iNat_RLS_effort_SppR <- effort_SppR %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
mutate(Year=as.factor(as.character(.$Year))) %>%
droplevels()
mod_iNat_RLS <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') + s(effort), family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS)
anova(mod_iNat_RLS)
mod_iNat_RLS_2 <- mgcv::gam(SppR ~ Dataset + s(Site, bs='re') + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_2)
anova(mod_iNat_RLS_2)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Site*Dataset + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Dataset*Site + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
mod_iNat_RLS_3 <- mgcv::gam(SppR ~ Site*Dataset + s(Year, bs='re') , family=nb, data=iNat_RLS_effort_SppR)
summary(mod_iNat_RLS_3)
anova(mod_iNat_RLS_3)
View(iNat_RLS_effort_SppR)
iNat_RLS_effort_SppR <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_")
iNat_RLS_effort_SppR <- effort_SppR %>%
ungroup(Site)%>%
mutate(Site=as.factor(as.character(.$Site))) %>%
mutate(Year=as.factor(as.character(.$Year))) %>%
droplevels()
iNat_RLS_effort_SppR$Si_Da <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_")
iNat_RLS_effort_SppR <- unite(iNat_RLS_effort_SppR, Site, Dataset, col="Si_Da",sep="_", remove = FALSE)
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
library(multcomp)
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=Si_Da) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=SppR) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=SppR) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(iNat_RLS_effort_SppR, linfct=contDist) # now run multiple comparisions
contDist = mcp(Si_Da="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Si="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Site="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(SppR="Tukey") # telling R to compare on the Dist factor
compDist = glht(mod_iNat_RLS_3, linfct=contDist) # now run multiple comparisions
contDist = mcp(Site*Dataset="Tukey") # telling R to compare on the Dist factor
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
# iNat Unique
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 1)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("lightgrey", "darkgrey"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(iNat == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(RLS > 1)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 0)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_coeff_counts %>% filter(RLS == 0)
iNat_RLS_gllvm_ord_LV2_counts <-  iNat_RLS_gllvm_ord_LV2_counts %>% filter(iNat > 2)
iNat_RLS_gllvm_ord_LV2_counts <- select(iNat_RLS_gllvm_ord_LV2_counts, Species, iNat, RLS)
iNat_RLS_gllvm_ord_LV2_counts <- gather(iNat_RLS_gllvm_ord_LV2_counts, iNat, RLS, key=Dataset,value='Counts')
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
View(iNat_RLS_gllvm_ord_LV2_counts)
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
library(tidyverse)
library(vegan)
library(mvabund)
library(gllvm)
library(ggplot2)
#image editor
library(magick)
ggplot(data = iNat_RLS_gllvm_ord_LV2_counts,
mapping = aes(x = reorder(Species, -Counts, diff), fill = Dataset,
y = ifelse(test = Dataset == "RLS",
yes = -Counts, no = Counts))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits = max(iNat_RLS_gllvm_ord_LV2_counts$Counts) * c(-1,1)) +
labs(y = "Site Occurances") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_line(colour = "NA")) +
scale_fill_manual(values=c("#A2E7F2", "#F98C3E"), name  ="Dataset",breaks=c("iNat", "RLS"), labels=c("iNaturalist", "RLS"))
assigned_points_2 <- as.data.frame(st_nearest_points(points_sf, regions_shape))
# packages
library(sf)
library(dplyr)
library(readr)
assigned_points_2 <- as.data.frame(st_nearest_points(points_sf, regions_shape))
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]],
col.id=1:41)
inat_dat <- read_csv("Data/iNat_AusFish.csv") %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
setwd("~/GitHub/diver_fish_selectivity")
regions_shape <- st_read("Data/imcra_provincial_bioregions/imcra4_pb.shp")
plot(regions_shape)
regions_metadata <- data.frame(region_name=regions_shape[[1]],
col.id=1:41)
inat_dat <- read_csv("Data/iNat_AusFish.csv") %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points_2 <- as.data.frame(st_nearest_points(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_2, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
View(inat_dat)
View(assigned_points_2)
assigned_points <- as.data.frame(st_intersects(points_sf, regions_shape))
View(assigned_points)
View(assigned_points_2)
View(assigned_points_2)
View(assigned_points_2)
View(assigned_points_2)
assigned_points_2 <- as.data.frame(st_nearest_points(points_sf, regions_shape, pairwise=TRUE))
View(inat_dat)
inat_data_test <-filter(inat_dat, place_guess=="swansea")
inat_data_test <-filter(inat_dat, place_guess=="Swansea")
inat_data_test <-filter(inat_dat, place_guess="Swansea")
inat_data_test <-filter(inat_dat, place_guess="Swansea", exact=FALSE)
inat_data_test <-filter(inat_dat, place_guess="Swansea*.*")
filter(str_detect(place_guess, "Swansea")
inat_data_test <-inat_dat %>%
filter(str_detect(place_guess, "Swansea"))
library(stringr)
inat_data_test <-inat_dat %>%
filter(str_detect(place_guess, "Swansea"))
View(inat_data_test)
points_sf_3 <- st_as_sf(inat_data_test, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape))
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 1))
View(assigned_points_3)
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 2))
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 100))
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 1000))
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 10000))
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf_3, regions_shape, 5000))
View(assigned_points_3)
assigned_points_3 <- as.data.frame(st_is_within_distance(points_sf, regions_shape, 10000))
iNat_assigned <- inat_data_test %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_2, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_3, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
View(iNat_assigned)
View(inat_dat)
inat_dat <- inat_dat %>%
filter(quality_grade=='research')
View(inat_dat)
View(inat_dat)
filter(coordinates_obscured=='TRUE'|private_latitude=='')
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(coordinates_obscured=='TRUE'|private_latitude=='')
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')
inat_dat_raw <- read_csv("Data/iNat_AusFish.csv")
inat_dat <-  inat_dat_raw %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10000)%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private late long.
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)%>%
filter(`field:diving, snorkeling, angling, shore etc` !='washup')%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
inat_dat <-  inat_dat_raw %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)
library(sf)
library(dplyr)
library(readr)
library(stringr)
nat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)
inat_dat <- inat_dat %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)%>%
filter(`field:diving, snorkeling, angling, shore etc` !='washup')%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)%>%
filter(`field:diving, snorkeling, angling, shore etc` !='washup')
inat_dat <- inat_dat_raw
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>%
filter(positional_accuracy <10001)%>%
filter(field:diving, snorkeling, angling, shore etc !='washup')%>%
filter(coordinates_obscured!='TRUE'|private_latitude!='')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')
View(inat_dat_raw)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(positional_accuracy <10001)
View(inat_dat)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter(field:diving, snorkeling, angling, shore etc !='washup')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_intersects(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_3, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
inat_dat <- inat_dat_raw %>%
filter(quality_grade=='research')%>% # could be worth doing a comparison of non-research grade as well for some of the more obscure/difficult species.
filter(is.na(positional_accuracy)|positional_accuracy<10001)%>%
filter('field:diving, snorkeling, angling, shore etc' !='washup')%>%
filter(coordinates_obscured !='TRUE'|private_latitude!='')  # remove obscured co-ordinates that have no private lat long.
# keep eggs?
# remove washups?
## removing obscured necessary? point is within 0.2 decrees -> ~20km
inat_dat <-  inat_dat %>%
mutate(final_lat=ifelse(is.na(private_latitude)=="TRUE", latitude, private_latitude)) %>%
mutate(final_lng=ifelse(is.na(private_longitude)=="TRUE", longitude, private_longitude)) %>%
dplyr::filter(complete.cases(final_lat))
crs <- "+proj=longlat +ellps=GRS80 +no_defs"
points_sf <- st_as_sf(inat_dat, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points <- as.data.frame(st_intersects(points_sf, regions_shape))
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_3, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
View(iNat_assigned)
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
iNat_unassigned <- iNat_assigned %>%
filter(is.na(region_name))
View(iNat_unassigned)
points_sf_2 <- st_as_sf(iNat_unassigned, coords = c("final_lng", "final_lat"),
crs = crs, agr = "constant")
assigned_points_2 <- as.data.frame(st_is_within_distance(points_sf_2, regions_shape, 10000))
View(iNat_assigned)
View(iNat_assigned)
iNat_assigned <- iNat_assigned %>%
filter(complete.cases(region_name))
assigned_points_3 <- bind_rows(assigned_points, assigned_points_2)
iNat_assigned <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_3, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
View(iNat_assigned)
iNat_unassigned <- iNat_assigned %>%
filter(is.na(region_name))
View(iNat_assigned)
iNat_assigned_test <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_2, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
iNat_assigned_test <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_2, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
library(sf)
library(dplyr)
library(readr)
library(stringr)
iNat_assigned_test <- inat_dat %>%
mutate(row.id = 1:nrow(.)) %>%
left_join(assigned_points_2, by="row.id") %>%
left_join(., regions_metadata, by="col.id") %>%
dplyr::select(-row.id, -col.id)
View(iNat_assigned_test)
View(assigned_points_2)
View(assigned_points_2)
View(points_sf_3)
View(regions_shape)
View(points_sf_2)
View(points_sf_2)
View(points_sf)
